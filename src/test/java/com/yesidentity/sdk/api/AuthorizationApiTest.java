/*
 * Yes Identity
 * Welcome to Yes Identity API documentation.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.yesidentity.sdk.api;

import com.yesidentity.sdk.invoker.ApiException;
import com.yesidentity.sdk.model.AuthenticationResponseModel;
import com.yesidentity.sdk.model.ClientAssertionTypeModel;
import com.yesidentity.sdk.model.ErrorResponseModel;
import com.yesidentity.sdk.model.JSONWebKeySetModel;
import com.yesidentity.sdk.model.OpenIDConfigurationModel;
import com.yesidentity.sdk.model.TokenResponseModel;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthorizationApi
 */
@Ignore
public class AuthorizationApiTest {

    private final AuthorizationApi api = new AuthorizationApi();

    
    /**
     * Get JSON Web Key Set
     *
     * Get JSON Web Key Set
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJSONWebKeySetTest() throws ApiException {
                JSONWebKeySetModel response = api.getJSONWebKeySet();
        // TODO: test validations
    }
    
    /**
     * Get OpenID Configuration
     *
     * Get OpenID Configuration
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOpenIDConfigurationTest() throws ApiException {
                OpenIDConfigurationModel response = api.getOpenIDConfiguration();
        // TODO: test validations
    }
    
    /**
     * Initiate Authentication Request
     *
     * Initiate Authentication Request
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void initiateAuthenticationRequestTest() throws ApiException {
        String scope = null;
        String bindingMessage = null;
        String authReqId = null;
        String loginHint = null;
        Integer requestedExpiry = null;
        String clientNotificationToken = null;
        String clientId = null;
        String clientAssertion = null;
        ClientAssertionTypeModel clientAssertionType = null;
        Long created = null;
        Long expired = null;
                AuthenticationResponseModel response = api.initiateAuthenticationRequest(scope, bindingMessage, authReqId, loginHint, requestedExpiry, clientNotificationToken, clientId, clientAssertion, clientAssertionType, created, expired);
        // TODO: test validations
    }
    
    /**
     * Initiate Token Request
     *
     * Initiate Token Request
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void initiateTokenRequestTest() throws ApiException {
        String grantType = null;
        String authReqId = null;
        String scope = null;
        String clientId = null;
        String clientAssertion = null;
        ClientAssertionTypeModel clientAssertionType = null;
                TokenResponseModel response = api.initiateTokenRequest(grantType, authReqId, scope, clientId, clientAssertion, clientAssertionType);
        // TODO: test validations
    }
    
}
